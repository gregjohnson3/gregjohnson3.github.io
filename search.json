[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "Blog 2.html",
    "href": "Blog 2.html",
    "title": "Greg Johnson's Blog",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\n\n\nstats <- read_csv(\"http://mattwaite.github.io/sportsdatafiles/stats23.csv\")\n\nRows: 363 Columns: 34\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): School, Season\ndbl (32): Rank, Games, OverallWins, OverallLosses, WinPct, OverallSRS, Overa...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nteams <- c(\"Nebraska\", \"Iowa\", \"Northwestern\", \"Minnesota\", \"Wisconsin\", \"Illinois\", \"Indiana\", \"Purdue\", \"Michigan\", \"Michigan State\", \"Ohio State\", \"Penn State\", \"Rutgers\", \"Maryland\")\n\nbigtournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\")\n\nbig <- stats %>% filter(School %in% teams)\n\nbigdance <- stats %>% filter(School %in% bigtournament)\n\nmi <- stats %>% filter(School == \"Michigan State\")\n\ntournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\", \"Fairleigh Dickinson\", \"Memphis\", \"Florida Atlantic\", \"Duke\", \"Oral Roberts\", \"Tennessee\", \"Louisiana\", \"Kentucky\", \"Providence\", \"Kansas State\", \"Montana State\", \"Southern California\", \"Marquette\", \"Vermont\", \"Houston\", \"Northern Kentucky\", \"Auburn\", \"Miami (FL)\", \"Drake\", \"Kent State\", \"Iowa State\", \"Pittsburgh\", \"Xavier\", \"Kennesaw State\", \"Texas A&M\", \"Texas\", \"Colgate\", \"Alabama\", \"Texas A&M-Corpus Christi\", \"West Virginia\", \"San Diego State\", \"College of Charleston\", \"Virginia\", \"Furman\", \"Creighton\", \"NC State\", \"Baylor\", \"UC Santa Barbara\", \"Missouri\", \"Utah State\", \"Arizona\", \"Princeton\", \"Kansas\", \"Howard\", \"Arkansas\", \"Saint Mary's (CA)\", \"Virginia Commonwealth\", \"Connecticut\", \"Iona\", \"TCU\", \"Arizona State\", \"Gonzaga\", \"Grand Canyon\", \"Boise State\", \"UCLA\", \"UNC Asheville\")\n\ndance <- stats %>% filter(School %in% tournament)\n\nsweettournament <- c(\"Michigan State\", \"Kansas State\", \"Arkansas\", \"Connecticut\", \"Florida Atlantic\", \"Tennessee\", \"Gonzaga\", \"UCLA\", \"San Diego State\", \"Alabama\", \"Miami (FL)\", \"Houston\", \"Princeton\", \"Creighton\", \"Xavier\", \"Texas\")\n\nsweetdance <- stats %>% filter(School %in% sweettournament)\n\ntop16 <- dance %>% \n  arrange(desc(OverallSOS)) %>% \n  top_n(16, wt=OverallSOS) %>% \n  select(School, OverallSOS)\n\nboth16 <- c(\"Alabama\", \"Arkansas\", \"Creighton\", \"Kansas State\", \"Michigan State\", \"Texas\", \"UCLA\", \"Xavier\")\n\nboth16dance <- stats %>% filter(School %in% both16)\n\nresidualmodel <- dance %>% mutate(averagedifferential = ForPoints/Games - OppPoints/Games)\n\n\n\nbigdanceresidual <- residualmodel %>% filter(School %in% bigtournament)\n\ndanceresidual <- residualmodel %>% filter(School %in% tournament)\n\nsweetdanceresidual <- residualmodel %>% filter(School %in% sweettournament)\n\nmiresidual <- residualmodel %>% filter(School == \"Michigan State\")\n\n\nhead(big)\n\n# A tibble: 6 × 34\n   Rank School      Games OverallWins OverallLosses WinPct OverallSRS OverallSOS\n  <dbl> <chr>       <dbl>       <dbl>         <dbl>  <dbl>      <dbl>      <dbl>\n1   120 Illinois       31          20            11  0.645       15.6       7.59\n2   124 Indiana        31          21            10  0.677       15.7       8.91\n3   127 Iowa           31          19            12  0.613       14.9       8.79\n4   164 Maryland       31          20            11  0.645       15.5       8.03\n5   175 Michigan       31          17            14  0.548       13.2       8.96\n6   176 Michigan S…    30          19            11  0.633       14.5      11.3 \n# ℹ 26 more variables: ConferenceWins <dbl>, ConferenceLosses <dbl>,\n#   HomeWins <dbl>, HomeLosses <dbl>, AwayWins <dbl>, AwayLosses <dbl>,\n#   ForPoints <dbl>, OppPoints <dbl>, Minutes <dbl>, FieldGoalsMade <dbl>,\n#   FieldGoalsAttempted <dbl>, FieldGoalPCT <dbl>, ThreePointMade <dbl>,\n#   ThreePointAttempts <dbl>, ThreePointPct <dbl>, FreeThrowsMade <dbl>,\n#   FreeThrowsAttempted <dbl>, FreeThrowPCT <dbl>, OffensiveRebounds <dbl>,\n#   TotalRebounds <dbl>, Assists <dbl>, Steals <dbl>, Blocks <dbl>, …\n\n\n\nhead(stats)\n\n# A tibble: 6 × 34\n   Rank School      Games OverallWins OverallLosses WinPct OverallSRS OverallSOS\n  <dbl> <chr>       <dbl>       <dbl>         <dbl>  <dbl>      <dbl>      <dbl>\n1     1 Abilene Ch…    29          13            16  0.448      -2.22       1.34\n2     2 Air Force      31          14            17  0.452       2.86       2.73\n3     3 Akron          31          21            10  0.677       4.37      -1.26\n4     4 Alabama        31          26             5  0.839      23.3       10.0 \n5     5 Alabama A&M    31          14            17  0.452     -10.3       -7   \n6     6 Alabama St…    31           8            23  0.258     -15.8       -5.73\n# ℹ 26 more variables: ConferenceWins <dbl>, ConferenceLosses <dbl>,\n#   HomeWins <dbl>, HomeLosses <dbl>, AwayWins <dbl>, AwayLosses <dbl>,\n#   ForPoints <dbl>, OppPoints <dbl>, Minutes <dbl>, FieldGoalsMade <dbl>,\n#   FieldGoalsAttempted <dbl>, FieldGoalPCT <dbl>, ThreePointMade <dbl>,\n#   ThreePointAttempts <dbl>, ThreePointPct <dbl>, FreeThrowsMade <dbl>,\n#   FreeThrowsAttempted <dbl>, FreeThrowPCT <dbl>, OffensiveRebounds <dbl>,\n#   TotalRebounds <dbl>, Assists <dbl>, Steals <dbl>, Blocks <dbl>, …\n\n\n\naverages<- stats %>% \n  group_by(School) %>% \n  summarise(\n    TotalPoints = sum(ForPoints), \n    TotalOpponentPoints = sum(OppPoints), \n    TotalGames = sum(Games)\n   ) %>% \n  mutate(\n    PPG = TotalPoints/TotalGames, \n    OppPPG = TotalOpponentPoints/TotalGames) \naverages %>%\n  summarise(AvgPPG = mean(PPG), AvgOppPPG = mean(OppPPG))\n\n# A tibble: 1 × 2\n  AvgPPG AvgOppPPG\n   <dbl>     <dbl>\n1   71.8      70.1\n\n\n\nggplot() +\n  geom_hline(yintercept=70.11547, color=\"black\") + \n  geom_vline(xintercept=71.81432, color=\"black\") +   \n  geom_point(data=stats, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.5, color=\"grey\", alpha=.3) +\n  geom_point(data=big, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#0088ce\") +\n  geom_point(data=sweetdance, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"red\") +\n  geom_point(data=mi, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#18453B\") + \n\n  labs(\n    title=\"Offensive and Defensive Points Per Game\",\n    subtitle=\"The Big Ten likes to play defense, but Sweet 16 teams can score\",\n    x=\"Points Per Game\", \n    y=\"Opponent Points Per Game\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n   geom_text(aes(x=82.5, y=81.5, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=82.5, y=78.5, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=68, y=67, label=\"Michigan State\\n(Big Ten and Sweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=82.5, y=60, label=\"Good Offense,\\nGood Defense\"), color=\"black\") +\n  geom_text(aes(x=62.5, y=80, label=\"Bad Offense,\\nBad Defense\"), color=\"black\") +\n  geom_text(aes(x=69.75, y=82.5, label=\"Average Points\\nPer Game\"), size=3, color=\"black\") +\n  geom_text(aes(x=60, y=72, label=\"Average Opponent\\nPoints Per Game\"), size=3, color=\"black\") +\n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nggplot() + \n  geom_bar(\n    data=big, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), \n      fill=\"grey\"\n    ) + \n  geom_bar(\n    data=bigdance, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), fill=\"#0088ce\"\n      \n    ) +\n  coord_flip() +\n labs(\n    title=\"Big Ten Strength of Schedule\",\n    subtitle=\"Sparty is not afraid of a fight\",\n    x=\"\", \n    y=\"Strength of Schedule\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n  geom_text(aes(x=\"Purdue\", y=9.75, label=\"Tournament\\nTeams\"), size=3.6, color=\"#0088ce\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nresidualmodel <- dance %>% mutate(averagedifferential = ForPoints/Games - OppPoints/Games)\n\n\nfit <- lm(averagedifferential ~ WinPct, data = residualmodel)\nsummary(fit)\n\n\nCall:\nlm(formula = averagedifferential ~ WinPct, data = residualmodel)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.8301 -1.4411 -0.1062  1.2589  6.6289 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -13.178      2.307  -5.711 3.41e-07 ***\nWinPct        29.533      3.128   9.440 1.32e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.119 on 62 degrees of freedom\nMultiple R-squared:  0.5897,    Adjusted R-squared:  0.5831 \nF-statistic: 89.12 on 1 and 62 DF,  p-value: 1.317e-13\n\n\n\nresidualmodel <- residualmodel %>% mutate(predicted = predict(fit), residuals = residuals(fit))\n\n\nresidualmodel %>% arrange(desc(residuals)) %>% select(School, averagedifferential, WinPct, predicted, residuals)\n\n# A tibble: 64 × 5\n   School            averagedifferential WinPct predicted residuals\n   <chr>                           <dbl>  <dbl>     <dbl>     <dbl>\n 1 Tennessee                       14.4   0.71       7.79      6.63\n 2 Houston                         19.5   0.935     14.4       5.08\n 3 Connecticut                     14.2   0.767      9.47      4.73\n 4 Creighton                        8.97  0.645      5.87      3.10\n 5 Gonzaga                         14.4   0.839     11.6       2.75\n 6 Grand Canyon                     8.58  0.645      5.87      2.71\n 7 Arkansas                         7.58  0.613      4.93      2.65\n 8 Illinois                         8.03  0.645      5.87      2.16\n 9 Saint Mary's (CA)               12.6   0.806     10.6       1.95\n10 Iowa State                       6.30  0.6        4.54      1.76\n# ℹ 54 more rows\n\n\n\nggplot() + \n  geom_point(data=residualmodel, aes(x=averagedifferential, y=WinPct)) +\n  geom_smooth(data=residualmodel, aes(x=averagedifferential, y=WinPct), method=\"lm\") +\n  geom_point(data=danceresidual, aes(x=averagedifferential, y=WinPct), color=\"grey\") +\n  geom_point(data=bigdanceresidual, aes(x=averagedifferential, y=WinPct), color=\"#0088ce\") +\n  geom_point(data=sweetdanceresidual, aes(x=averagedifferential, y=WinPct), color=\"red\") +\n  geom_point(data=miresidual, aes(x=averagedifferential, y=WinPct), color=\"#18453B\") +\n  \n  labs(\n    title=\"Point Differential and Win Percentage of Tournament Teams\",\n    subtitle=\"Big Ten teams like to keep it close, but Sweet 16 teams can run away with the game\",\n    x=\"Average Point Differential\", \n    y=\"Win Percentage\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\") +\n  geom_text(aes(x=5, y=.925, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=5, y=.875, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=2.5, y=.675, label=\"Michigan State\\n(Big Ten and\\nSweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=15.25, y=.775, label=\"National Champion\\nConnecticut\"), size=3, color=\"red\") +\n  geom_text(aes(x=12.3, y=.91, label=\"Nation Semifinalist\\nFlorida Atlantic\"), size=3, color=\"red\") +\n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\ndanceresidual %>%\n  arrange(desc(averagedifferential))\n\n# A tibble: 64 × 35\n    Rank School     Games OverallWins OverallLosses WinPct OverallSRS OverallSOS\n   <dbl> <chr>      <dbl>       <dbl>         <dbl>  <dbl>      <dbl>      <dbl>\n 1   115 Houston       31          29             2  0.935      23.9        4.39\n 2   301 Tennessee     31          22             9  0.71       22.6        8.23\n 3   104 Gonzaga       31          26             5  0.839      19.6        7.38\n 4    61 Connectic…    30          23             7  0.767      21.3        7.15\n 5   325 UCLA          31          27             4  0.871      22.6        8.62\n 6    57 College o…    32          29             3  0.906       8.82      -4.66\n 7   229 Oral Robe…    32          28             4  0.875       9.37      -2.67\n 8    89 Florida A…    31          28             3  0.903      13.0        0.43\n 9     4 Alabama       31          26             5  0.839      23.3       10.0 \n10   259 Saint Mar…    31          25             6  0.806      19.0        6.7 \n# ℹ 54 more rows\n# ℹ 27 more variables: ConferenceWins <dbl>, ConferenceLosses <dbl>,\n#   HomeWins <dbl>, HomeLosses <dbl>, AwayWins <dbl>, AwayLosses <dbl>,\n#   ForPoints <dbl>, OppPoints <dbl>, Minutes <dbl>, FieldGoalsMade <dbl>,\n#   FieldGoalsAttempted <dbl>, FieldGoalPCT <dbl>, ThreePointMade <dbl>,\n#   ThreePointAttempts <dbl>, ThreePointPct <dbl>, FreeThrowsMade <dbl>,\n#   FreeThrowsAttempted <dbl>, FreeThrowPCT <dbl>, OffensiveRebounds <dbl>, …"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest Posts",
    "section": "",
    "text": "The Big Ten’s Short Lived 2023 March Madness\n\n\n\n\n\n\n\nppg\n\n\nsos\n\n\nsweetsixteen\n\n\n\n\n\n\n\n\n\n\n\nApr 16, 2023\n\n\nGreg Johnson\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 20, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 17, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/the-big-ten-sucks-at-march-madness/index.html",
    "href": "posts/the-big-ten-sucks-at-march-madness/index.html",
    "title": "The Big Ten’s Short Lived 2023 March Madness",
    "section": "",
    "text": "Text Example One\n\n\nCode\nlibrary(tidyverse)\n\nstats <- read_csv(\"http://mattwaite.github.io/sportsdatafiles/stats23.csv\")\n\nteams <- c(\"Nebraska\", \"Iowa\", \"Northwestern\", \"Minnesota\", \"Wisconsin\", \"Illinois\", \"Indiana\", \"Purdue\", \"Michigan\", \"Michigan State\", \"Ohio State\", \"Penn State\", \"Rutgers\", \"Maryland\")\n\nbigtournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\")\n\nbig <- stats %>% filter(School %in% teams)\n\nbigdance <- stats %>% filter(School %in% bigtournament)\n\nmi <- stats %>% filter(School == \"Michigan State\")\n\ntournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\", \"Fairleigh Dickinson\", \"Memphis\", \"Florida Atlantic\", \"Duke\", \"Oral Roberts\", \"Tennessee\", \"Louisiana\", \"Kentucky\", \"Providence\", \"Kansas State\", \"Montana State\", \"Southern California\", \"Marquette\", \"Vermont\", \"Houston\", \"Northern Kentucky\", \"Auburn\", \"Miami (FL)\", \"Drake\", \"Kent State\", \"Iowa State\", \"Pittsburgh\", \"Xavier\", \"Kennesaw State\", \"Texas A&M\", \"Texas\", \"Colgate\", \"Alabama\", \"Texas A&M-Corpus Christi\", \"West Virginia\", \"San Diego State\", \"College of Charleston\", \"Virginia\", \"Furman\", \"Creighton\", \"NC State\", \"Baylor\", \"UC Santa Barbara\", \"Missouri\", \"Utah State\", \"Arizona\", \"Princeton\", \"Kansas\", \"Howard\", \"Arkansas\", \"Saint Mary's (CA)\", \"Virginia Commonwealth\", \"Connecticut\", \"Iona\", \"TCU\", \"Arizona State\", \"Gonzaga\", \"Grand Canyon\", \"Boise State\", \"UCLA\", \"UNC Asheville\")\n\ndance <- stats %>% filter(School %in% tournament)\n\nsweettournament <- c(\"Michigan State\", \"Kansas State\", \"Arkansas\", \"Connecticut\", \"Florida Atlantic\", \"Tennessee\", \"Gonzaga\", \"UCLA\", \"San Diego State\", \"Alabama\", \"Miami (FL)\", \"Houston\", \"Princeton\", \"Creighton\", \"Xavier\", \"Texas\")\n\nsweetdance <- stats %>% filter(School %in% sweettournament)\n\ntop16 <- dance %>% \n  arrange(desc(OverallSOS)) %>% \n  top_n(16, wt=OverallSOS) %>% \n  select(School, OverallSOS)\n\nboth16 <- c(\"Alabama\", \"Arkansas\", \"Creighton\", \"Kansas State\", \"Michigan State\", \"Texas\", \"UCLA\", \"Xavier\")\n\nboth16dance <- stats %>% filter(School %in% both16)\n\nresidualmodel <- dance %>% mutate(averagedifferential = ForPoints/Games - OppPoints/Games)\n\n\n\nbigdanceresidual <- residualmodel %>% filter(School %in% bigtournament)\n\ndanceresidual <- residualmodel %>% filter(School %in% tournament)\n\nsweetdanceresidual <- residualmodel %>% filter(School %in% sweettournament)\n\nmiresidual <- residualmodel %>% filter(School == \"Michigan State\")\n\nggplot() +\n  geom_hline(yintercept=70.11547, color=\"black\") + \n  geom_vline(xintercept=71.81432, color=\"black\") +   \n  geom_point(data=stats, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.5, color=\"grey\", alpha=.3) +\n  geom_point(data=big, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#0088ce\") +\n  geom_point(data=sweetdance, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"red\") +\n  geom_point(data=mi, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#18453B\") + \n\n  labs(\n    title=\"Offensive and Defensive Points Per Game\",\n    subtitle=\"The Big Ten likes to play defense, but Sweet 16 teams can score\",\n    x=\"Points Per Game\", \n    y=\"Opponent Points Per Game\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n   geom_text(aes(x=82.5, y=81.5, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=82.5, y=78.5, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=68, y=67, label=\"Michigan State\\n(Big Ten and Sweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=82.5, y=60, label=\"Good Offense,\\nGood Defense\"), color=\"black\") +\n  geom_text(aes(x=62.5, y=80, label=\"Bad Offense,\\nBad Defense\"), color=\"black\") +\n  geom_text(aes(x=69.75, y=82.5, label=\"Average Points\\nPer Game\"), size=3, color=\"black\") +\n  geom_text(aes(x=60, y=72, label=\"Average Opponent\\nPoints Per Game\"), size=3, color=\"black\") +\n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nThat was chart 1, here is chart 2\n\n\nCode\nggplot() + \n  geom_bar(\n    data=big, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), \n      fill=\"grey\"\n    ) + \n  geom_bar(\n    data=bigdance, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), fill=\"#0088ce\"\n      \n    ) +\n  coord_flip() +\n labs(\n    title=\"Big Ten Strength of Schedule\",\n    subtitle=\"Sparty is not afraid of a fight\",\n    x=\"\", \n    y=\"Strength of Schedule\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n  geom_text(aes(x=\"Purdue\", y=9.75, label=\"Tournament\\nTeams\"), size=3.6, color=\"#0088ce\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nAnother Chart coming up\n\n\nCode\nggplot() + \n  geom_point(data=residualmodel, aes(x=averagedifferential, y=WinPct)) +\n  geom_smooth(data=residualmodel, aes(x=averagedifferential, y=WinPct), method=\"lm\") +\n  geom_point(data=danceresidual, aes(x=averagedifferential, y=WinPct), color=\"grey\") +\n  geom_point(data=bigdanceresidual, aes(x=averagedifferential, y=WinPct), color=\"#0088ce\") +\n  geom_point(data=sweetdanceresidual, aes(x=averagedifferential, y=WinPct), color=\"red\") +\n  geom_point(data=miresidual, aes(x=averagedifferential, y=WinPct), color=\"#18453B\") +\n  \n  labs(\n    title=\"Point Differential and Win Percentage of Tournament Teams\",\n    subtitle=\"Big Ten teams like to keep it close, but Sweet 16 teams can run away with the game\",\n    x=\"Average Point Differential\", \n    y=\"Win Percentage\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\") +\n  geom_text(aes(x=5, y=.925, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=5, y=.875, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=2.5, y=.675, label=\"Michigan State\\n(Big Ten and\\nSweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=15.25, y=.775, label=\"National Champion\\nConnecticut\"), size=3, color=\"red\") +\n  geom_text(aes(x=12.3, y=.91, label=\"Nation Semifinalist\\nFlorida Atlantic\"), size=3, color=\"red\") +\n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]