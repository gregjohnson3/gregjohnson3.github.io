[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "Blog 2.html",
    "href": "Blog 2.html",
    "title": "Greg Johnson's Blog",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\n\n\nstats <- read_csv(\"http://mattwaite.github.io/sportsdatafiles/stats23.csv\")\n\nRows: 363 Columns: 34\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): School, Season\ndbl (32): Rank, Games, OverallWins, OverallLosses, WinPct, OverallSRS, Overa...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nteams <- c(\"Nebraska\", \"Iowa\", \"Northwestern\", \"Minnesota\", \"Wisconsin\", \"Illinois\", \"Indiana\", \"Purdue\", \"Michigan\", \"Michigan State\", \"Ohio State\", \"Penn State\", \"Rutgers\", \"Maryland\")\n\nbigtournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\")\n\nbig <- stats %>% filter(School %in% teams)\n\nbigdance <- stats %>% filter(School %in% bigtournament)\n\nmi <- stats %>% filter(School == \"Michigan State\")\n\ntournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\", \"Fairleigh Dickinson\", \"Memphis\", \"Florida Atlantic\", \"Duke\", \"Oral Roberts\", \"Tennessee\", \"Louisiana\", \"Kentucky\", \"Providence\", \"Kansas State\", \"Montana State\", \"Southern California\", \"Marquette\", \"Vermont\", \"Houston\", \"Northern Kentucky\", \"Auburn\", \"Miami (FL)\", \"Drake\", \"Kent State\", \"Iowa State\", \"Pittsburgh\", \"Xavier\", \"Kennesaw State\", \"Texas A&M\", \"Texas\", \"Colgate\", \"Alabama\", \"Texas A&M-Corpus Christi\", \"West Virginia\", \"San Diego State\", \"College of Charleston\", \"Virginia\", \"Furman\", \"Creighton\", \"NC State\", \"Baylor\", \"UC Santa Barbara\", \"Missouri\", \"Utah State\", \"Arizona\", \"Princeton\", \"Kansas\", \"Howard\", \"Arkansas\", \"Saint Mary's (CA)\", \"Virginia Commonwealth\", \"Connecticut\", \"Iona\", \"TCU\", \"Arizona State\", \"Gonzaga\", \"Grand Canyon\", \"Boise State\", \"UCLA\", \"UNC Asheville\")\n\ndance <- stats %>% filter(School %in% tournament)\n\nsweettournament <- c(\"Michigan State\", \"Kansas State\", \"Arkansas\", \"Connecticut\", \"Florida Atlantic\", \"Tennessee\", \"Gonzaga\", \"UCLA\", \"San Diego State\", \"Alabama\", \"Miami (FL)\", \"Houston\", \"Princeton\", \"Creighton\", \"Xavier\", \"Texas\")\n\nsweetdance <- stats %>% filter(School %in% sweettournament)\n\ntop16 <- dance %>% \n  arrange(desc(OverallSOS)) %>% \n  top_n(16, wt=OverallSOS) %>% \n  select(School, OverallSOS)\n\nboth16 <- c(\"Alabama\", \"Arkansas\", \"Creighton\", \"Kansas State\", \"Michigan State\", \"Texas\", \"UCLA\", \"Xavier\")\n\nboth16dance <- stats %>% filter(School %in% both16)\n\nresidualmodel <- dance %>% mutate(averagedifferential = ForPoints/Games - OppPoints/Games)\n\n\n\nbigdanceresidual <- residualmodel %>% filter(School %in% bigtournament)\n\ndanceresidual <- residualmodel %>% filter(School %in% tournament)\n\nsweetdanceresidual <- residualmodel %>% filter(School %in% sweettournament)\n\nmiresidual <- residualmodel %>% filter(School == \"Michigan State\")\n\n\nhead(big)\n\n# A tibble: 6 × 34\n   Rank School      Games OverallWins OverallLosses WinPct OverallSRS OverallSOS\n  <dbl> <chr>       <dbl>       <dbl>         <dbl>  <dbl>      <dbl>      <dbl>\n1   120 Illinois       31          20            11  0.645       15.6       7.59\n2   124 Indiana        31          21            10  0.677       15.7       8.91\n3   127 Iowa           31          19            12  0.613       14.9       8.79\n4   164 Maryland       31          20            11  0.645       15.5       8.03\n5   175 Michigan       31          17            14  0.548       13.2       8.96\n6   176 Michigan S…    30          19            11  0.633       14.5      11.3 \n# ℹ 26 more variables: ConferenceWins <dbl>, ConferenceLosses <dbl>,\n#   HomeWins <dbl>, HomeLosses <dbl>, AwayWins <dbl>, AwayLosses <dbl>,\n#   ForPoints <dbl>, OppPoints <dbl>, Minutes <dbl>, FieldGoalsMade <dbl>,\n#   FieldGoalsAttempted <dbl>, FieldGoalPCT <dbl>, ThreePointMade <dbl>,\n#   ThreePointAttempts <dbl>, ThreePointPct <dbl>, FreeThrowsMade <dbl>,\n#   FreeThrowsAttempted <dbl>, FreeThrowPCT <dbl>, OffensiveRebounds <dbl>,\n#   TotalRebounds <dbl>, Assists <dbl>, Steals <dbl>, Blocks <dbl>, …\n\n\n\nhead(stats)\n\n# A tibble: 6 × 34\n   Rank School      Games OverallWins OverallLosses WinPct OverallSRS OverallSOS\n  <dbl> <chr>       <dbl>       <dbl>         <dbl>  <dbl>      <dbl>      <dbl>\n1     1 Abilene Ch…    29          13            16  0.448      -2.22       1.34\n2     2 Air Force      31          14            17  0.452       2.86       2.73\n3     3 Akron          31          21            10  0.677       4.37      -1.26\n4     4 Alabama        31          26             5  0.839      23.3       10.0 \n5     5 Alabama A&M    31          14            17  0.452     -10.3       -7   \n6     6 Alabama St…    31           8            23  0.258     -15.8       -5.73\n# ℹ 26 more variables: ConferenceWins <dbl>, ConferenceLosses <dbl>,\n#   HomeWins <dbl>, HomeLosses <dbl>, AwayWins <dbl>, AwayLosses <dbl>,\n#   ForPoints <dbl>, OppPoints <dbl>, Minutes <dbl>, FieldGoalsMade <dbl>,\n#   FieldGoalsAttempted <dbl>, FieldGoalPCT <dbl>, ThreePointMade <dbl>,\n#   ThreePointAttempts <dbl>, ThreePointPct <dbl>, FreeThrowsMade <dbl>,\n#   FreeThrowsAttempted <dbl>, FreeThrowPCT <dbl>, OffensiveRebounds <dbl>,\n#   TotalRebounds <dbl>, Assists <dbl>, Steals <dbl>, Blocks <dbl>, …\n\n\n\naverages<- stats %>% \n  group_by(School) %>% \n  summarise(\n    TotalPoints = sum(ForPoints), \n    TotalOpponentPoints = sum(OppPoints), \n    TotalGames = sum(Games)\n   ) %>% \n  mutate(\n    PPG = TotalPoints/TotalGames, \n    OppPPG = TotalOpponentPoints/TotalGames) \naverages %>%\n  summarise(AvgPPG = mean(PPG), AvgOppPPG = mean(OppPPG))\n\n# A tibble: 1 × 2\n  AvgPPG AvgOppPPG\n   <dbl>     <dbl>\n1   71.8      70.1\n\n\n\nbigfinddef <- averages %>% filter(School %in% teams) %>%\n  arrange(desc(OppPPG))\n\n\nbigfinddef %>%\n  arrange(desc(OppPPG))\n\n# A tibble: 14 × 6\n   School         TotalPoints TotalOpponentPoints TotalGames   PPG OppPPG\n   <chr>                <dbl>               <dbl>      <dbl> <dbl>  <dbl>\n 1 Iowa                  2498                2308         31  80.6   74.5\n 2 Minnesota             1817                2057         29  62.7   70.9\n 3 Michigan              2289                2159         31  73.8   69.6\n 4 Nebraska              2100                2158         31  67.7   69.6\n 5 Ohio State            2266                2150         31  73.1   69.4\n 6 Indiana               2333                2122         31  75.3   68.5\n 7 Penn State            2243                2113         31  72.4   68.2\n 8 Michigan State        2119                2021         30  70.6   67.4\n 9 Illinois              2313                2064         31  74.6   66.6\n10 Wisconsin             1956                1913         30  65.2   63.8\n11 Maryland              2192                1960         31  70.7   63.2\n12 Purdue                2268                1937         31  73.2   62.5\n13 Northwestern          2100                1932         31  67.7   62.3\n14 Rutgers               2113                1871         31  68.2   60.4\n\n\n\naverages %>%\n  arrange(desc(PPG))\n\n# A tibble: 363 × 6\n   School           TotalPoints TotalOpponentPoints TotalGames   PPG OppPPG\n   <chr>                  <dbl>               <dbl>      <dbl> <dbl>  <dbl>\n 1 Gonzaga                 2727                2282         31  88.0   73.6\n 2 Toledo                  2751                2443         32  86.0   76.3\n 3 Oral Roberts            2702                2261         32  84.4   70.7\n 4 Arizona                 2577                2229         31  83.1   71.9\n 5 Youngstown State        2658                2321         32  83.1   72.5\n 6 Southern Utah           2574                2280         31  83.0   73.5\n 7 Alabama                 2568                2156         31  82.8   69.5\n 8 Cornell                 2227                2049         27  82.5   75.9\n 9 UAB                     2634                2294         32  82.3   71.7\n10 Xavier                  2546                2309         31  82.1   74.5\n# ℹ 353 more rows\n\n\n\nggplot() +\n  geom_hline(yintercept=70.11547, color=\"black\") + \n  geom_vline(xintercept=71.81432, color=\"black\") +   \n  geom_point(data=stats, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"grey\", alpha=.3) +\n  geom_point(data=big, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#0088ce\") +\n  geom_point(data=sweetdance, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"red\") +\n  geom_point(data=mi, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#18453B\") + \n\n  labs(\n    title=\"Offensive and Defensive Points Per Game\",\n    subtitle=\"The Big Ten likes to play defense, but Sweet 16 teams can score\",\n    x=\"Points Per Game\", \n    y=\"Opponent Points Per Game\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n   geom_text(aes(x=82.5, y=81.5, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=82.5, y=78.5, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=68, y=67, label=\"Michigan State\\n(Big Ten and Sweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=82.5, y=60, label=\"Good Offense,\\nGood Defense\"), color=\"black\") +\n  geom_text(aes(x=62.5, y=80, label=\"Bad Offense,\\nBad Defense\"), color=\"black\") +\n  geom_text(aes(x=69.75, y=82.5, label=\"Average Points\\nPer Game\"), size=3, color=\"black\") +\n  geom_text(aes(x=60, y=72, label=\"Average Opponent\\nPoints Per Game\"), size=3, color=\"black\") +\n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nstats %>%\n  arrange(desc(OverallSOS))\n\n# A tibble: 363 × 34\n    Rank School     Games OverallWins OverallLosses WinPct OverallSRS OverallSOS\n   <dbl> <chr>      <dbl>       <dbl>         <dbl>  <dbl>      <dbl>      <dbl>\n 1   134 Kansas        31          25             6  0.806       19.8      12.5 \n 2   225 Oklahoma      31          15            16  0.484       12.3      12.0 \n 3   176 Michigan …    30          19            11  0.633       14.5      11.3 \n 4    20 Baylor        31          22             9  0.71        18.5      11.2 \n 5   349 West Virg…    31          18            13  0.581       16.8      11.1 \n 6   226 Oklahoma …    31          17            14  0.548       13.7      11.0 \n 7   305 Texas         31          23             8  0.742       20.7      10.6 \n 8   128 Iowa State    30          18            12  0.6         16.8      10.4 \n 9     4 Alabama       31          26             5  0.839       23.3      10.0 \n10   136 Kansas St…    31          23             8  0.742       17.0       9.85\n# ℹ 353 more rows\n# ℹ 26 more variables: ConferenceWins <dbl>, ConferenceLosses <dbl>,\n#   HomeWins <dbl>, HomeLosses <dbl>, AwayWins <dbl>, AwayLosses <dbl>,\n#   ForPoints <dbl>, OppPoints <dbl>, Minutes <dbl>, FieldGoalsMade <dbl>,\n#   FieldGoalsAttempted <dbl>, FieldGoalPCT <dbl>, ThreePointMade <dbl>,\n#   ThreePointAttempts <dbl>, ThreePointPct <dbl>, FreeThrowsMade <dbl>,\n#   FreeThrowsAttempted <dbl>, FreeThrowPCT <dbl>, OffensiveRebounds <dbl>, …\n\n\n\nggplot() + \n  geom_bar(\n    data=big, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), \n      fill=\"grey\"\n    ) + \n  geom_bar(\n    data=bigdance, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), fill=\"#0088ce\"\n      \n    ) +\n  coord_flip() +\n labs(\n    title=\"Big Ten Strength of Schedule\",\n    subtitle=\"Sparty is not afraid of a fight\",\n    x=\"\", \n    y=\"Strength of Schedule\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n  geom_text(aes(x=\"Purdue\", y=9.75, label=\"Tournament\\nTeams\"), size=3.6, color=\"#0088ce\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nresidualmodel <- dance %>% mutate(averagedifferential = ForPoints/Games - OppPoints/Games)\n\n\nfit <- lm(averagedifferential ~ WinPct, data = residualmodel)\nsummary(fit)\n\n\nCall:\nlm(formula = averagedifferential ~ WinPct, data = residualmodel)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.8301 -1.4411 -0.1062  1.2589  6.6289 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -13.178      2.307  -5.711 3.41e-07 ***\nWinPct        29.533      3.128   9.440 1.32e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.119 on 62 degrees of freedom\nMultiple R-squared:  0.5897,    Adjusted R-squared:  0.5831 \nF-statistic: 89.12 on 1 and 62 DF,  p-value: 1.317e-13\n\n\n\nresidualmodel <- residualmodel %>% mutate(predicted = predict(fit), residuals = residuals(fit))\n\n\nresidualmodel %>% arrange(desc(residuals)) %>% select(School, averagedifferential, WinPct, predicted, residuals)\n\n# A tibble: 64 × 5\n   School            averagedifferential WinPct predicted residuals\n   <chr>                           <dbl>  <dbl>     <dbl>     <dbl>\n 1 Tennessee                       14.4   0.71       7.79      6.63\n 2 Houston                         19.5   0.935     14.4       5.08\n 3 Connecticut                     14.2   0.767      9.47      4.73\n 4 Creighton                        8.97  0.645      5.87      3.10\n 5 Gonzaga                         14.4   0.839     11.6       2.75\n 6 Grand Canyon                     8.58  0.645      5.87      2.71\n 7 Arkansas                         7.58  0.613      4.93      2.65\n 8 Illinois                         8.03  0.645      5.87      2.16\n 9 Saint Mary's (CA)               12.6   0.806     10.6       1.95\n10 Iowa State                       6.30  0.6        4.54      1.76\n# ℹ 54 more rows\n\n\n\nggplot() + \n  geom_point(data=residualmodel, aes(x=averagedifferential, y=WinPct)) +\n  geom_smooth(data=residualmodel, aes(x=averagedifferential, y=WinPct), method=\"lm\", color=\"black\") +\n  geom_point(data=danceresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"grey\") +\n  geom_point(data=bigdanceresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"#0088ce\") +\n  geom_point(data=sweetdanceresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"red\") +\n  geom_point(data=miresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"#18453B\") +\n  \n  labs(\n    title=\"Point Differential and Win Percentage of Tournament Teams\",\n    subtitle=\"Big Ten teams like to keep it close, but Sweet 16 teams can run away with the game\",\n    x=\"Average Point Differential\", \n    y=\"Win Percentage\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\") +\n  geom_text(aes(x=5, y=.925, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=5, y=.875, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=2.5, y=.675, label=\"Michigan State\\n(Big Ten and\\nSweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=15.25, y=.775, label=\"National Champion\\nConnecticut\"), size=3, color=\"red\") +\n  geom_text(aes(x=12.3, y=.91, label=\"Nation Semifinalist\\nFlorida Atlantic\"), size=3, color=\"red\") +\n  geom_text(aes(x=15, y=.65, label=\"Teams that underperformed based on\\ntheir point differential fall below the line,\\nwhile teams that overperformed lie above the line\"), size=3, color=\"black\") +\n   geom_text(aes(x=16.25, y=.96, label=\"Expected win percentage based\\non average point differential\"), size=3, color=\"black\") +\n  \n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\ndanceresidual %>%\n  arrange(desc(averagedifferential))\n\n# A tibble: 64 × 35\n    Rank School     Games OverallWins OverallLosses WinPct OverallSRS OverallSOS\n   <dbl> <chr>      <dbl>       <dbl>         <dbl>  <dbl>      <dbl>      <dbl>\n 1   115 Houston       31          29             2  0.935      23.9        4.39\n 2   301 Tennessee     31          22             9  0.71       22.6        8.23\n 3   104 Gonzaga       31          26             5  0.839      19.6        7.38\n 4    61 Connectic…    30          23             7  0.767      21.3        7.15\n 5   325 UCLA          31          27             4  0.871      22.6        8.62\n 6    57 College o…    32          29             3  0.906       8.82      -4.66\n 7   229 Oral Robe…    32          28             4  0.875       9.37      -2.67\n 8    89 Florida A…    31          28             3  0.903      13.0        0.43\n 9     4 Alabama       31          26             5  0.839      23.3       10.0 \n10   259 Saint Mar…    31          25             6  0.806      19.0        6.7 \n# ℹ 54 more rows\n# ℹ 27 more variables: ConferenceWins <dbl>, ConferenceLosses <dbl>,\n#   HomeWins <dbl>, HomeLosses <dbl>, AwayWins <dbl>, AwayLosses <dbl>,\n#   ForPoints <dbl>, OppPoints <dbl>, Minutes <dbl>, FieldGoalsMade <dbl>,\n#   FieldGoalsAttempted <dbl>, FieldGoalPCT <dbl>, ThreePointMade <dbl>,\n#   ThreePointAttempts <dbl>, ThreePointPct <dbl>, FreeThrowsMade <dbl>,\n#   FreeThrowsAttempted <dbl>, FreeThrowPCT <dbl>, OffensiveRebounds <dbl>, …"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest posts",
    "section": "",
    "text": "Fantasy Football Title\n\n\n\n\n\n\n\nppg\n\n\nsos\n\n\nsweetsixteen\n\n\n\n\n\n\n\n\n\n\n\nMay 7, 2023\n\n\nGreg Johnson\n\n\n\n\n\n\n  \n\n\n\n\nThe Big Ten’s Short Lived 2023 March Madness\n\n\n\n\n\n\n\nppg\n\n\nsos\n\n\nsweetsixteen\n\n\n\n\n\n\n\n\n\n\n\nApr 16, 2023\n\n\nGreg Johnson\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 20, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 17, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/fantasy-football/index.html",
    "href": "posts/fantasy-football/index.html",
    "title": "Fantasy Football Title",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\n\nCode\nlibrary(rvest)\n\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n\nCode\nlibrary(ggbeeswarm)\nlibrary(ggrepel)\nlibrary(cowplot)\n\n\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\n\n\n\nCode\nurl <- \"https://www.pro-football-reference.com/years/2022/fantasy.htm\"\n\nfantasy22setup <- url %>%\n  read_html() %>%\n  html_nodes(xpath = '//*[@id=\"div_fantasy\"]') %>%\n  html_table(header=FALSE)\n\n\n\n\nCode\nfantasy22 <- fantasy22setup[[1]] %>% \n  rename(\n    Rk=X1, \n    Player=X2,\n    Tm=X3,\n    FantPos=X4,\n    Age=X5,\n    G=X6,\n    GS=X7,\n    Cmp=X8,\n    PassAtt=X9,\n    PassYds=X10,\n    PassTD=X11,\n    Int=X12,\n    RushAtt=X13,\n    RushYds=X14,\n    RushYPA=X15,\n    RushTD=X16,\n    RecTgt=X17,\n    Rec=X18,\n    RecYds=X19,\n    RecYPR=X20,\n    RecTD=X21,\n    Fmb=X22,\n    FmbL=X23,\n    RecRushTD=X24,\n    TwoPCMade=X25,\n    TwoPCPass=X26,\n    FantPt=X27,\n    PPR=X28,\n    DKPt=X29,\n    FDPt=X30,\n    VBD=X31,\n    PosRank=X32,\n    OvRank=X33\n  ) %>% \n  mutate_at(5:33, as.numeric)\n\n\nWarning: There were 29 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `Age = .Primitive(\"as.double\")(Age)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 28 remaining warnings.\n\n\n\n\nCode\nhead(fantasy22)\n\n\n# A tibble: 6 × 33\n  Rk    Player      Tm    FantPos   Age     G    GS   Cmp PassAtt PassYds PassTD\n  <chr> <chr>       <chr> <chr>   <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>  <dbl>\n1 \"\"    \"\"          \"\"    \"\"         NA    NA    NA    NA      NA      NA     NA\n2 \"Rk\"  \"Player\"    \"Tm\"  \"FantP…    NA    NA    NA    NA      NA      NA     NA\n3 \"1\"   \"Patrick M… \"KAN\" \"QB\"       27    17    17   435     648    5250     41\n4 \"2\"   \"Josh Jaco… \"LVR\" \"RB\"       24    17    17     0       0       0      0\n5 \"3\"   \"Christian… \"2TM\" \"RB\"       26    17    16     1       1      34      1\n6 \"4\"   \"Derrick H… \"TEN\" \"RB\"       28    16    16     2       2       4      1\n# ℹ 22 more variables: Int <dbl>, RushAtt <dbl>, RushYds <dbl>, RushYPA <dbl>,\n#   RushTD <dbl>, RecTgt <dbl>, Rec <dbl>, RecYds <dbl>, RecYPR <dbl>,\n#   RecTD <dbl>, Fmb <dbl>, FmbL <dbl>, RecRushTD <dbl>, TwoPCMade <dbl>,\n#   TwoPCPass <dbl>, FantPt <dbl>, PPR <dbl>, DKPt <dbl>, FDPt <dbl>,\n#   VBD <dbl>, PosRank <dbl>, OvRank <dbl>\n\n\n\n\nCode\nfantasy22 %>%\n  arrange(desc(Age))\n\n\n# A tibble: 673 × 33\n   Rk    Player     Tm    FantPos   Age     G    GS   Cmp PassAtt PassYds PassTD\n   <chr> <chr>      <chr> <chr>   <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>  <dbl>\n 1 79    Tom Brady  TAM   \"QB\"       45    17    17   490     733    4694     25\n 2 80    Aaron Rod… GNB   \"QB\"       39    17    17   350     542    3695     26\n 3 332   Marcedes … GNB   \"TE\"       38    17    17     0       0       0      0\n 4 590   Clark Har… CIN   \"\"         38     1     0     0       0       0      0\n 5 94    Matt Ryan  IND   \"QB\"       37    12    12   309     461    3057     14\n 6 228   Joe Flacco NYJ   \"QB\"       37     5     4   110     191    1051      5\n 7 541   Brian Hoy… NWE   \"QB\"       37     1     1     5       6      37      0\n 8 623   Matthew S… NWE   \"\"         37    17     0     0       0       0      0\n 9 645   Chad Henne KAN   \"QB\"       37     3     0     0       2       0      0\n10 282   Colt McCoy ARI   \"QB\"       36     4     3    90     132     780      1\n# ℹ 663 more rows\n# ℹ 22 more variables: Int <dbl>, RushAtt <dbl>, RushYds <dbl>, RushYPA <dbl>,\n#   RushTD <dbl>, RecTgt <dbl>, Rec <dbl>, RecYds <dbl>, RecYPR <dbl>,\n#   RecTD <dbl>, Fmb <dbl>, FmbL <dbl>, RecRushTD <dbl>, TwoPCMade <dbl>,\n#   TwoPCPass <dbl>, FantPt <dbl>, PPR <dbl>, DKPt <dbl>, FDPt <dbl>,\n#   VBD <dbl>, PosRank <dbl>, OvRank <dbl>\n\n\n\n\nCode\nfantasy22withoutgarbage <- fantasy22 %>% \n  filter(Rk != \"Rk\" & G != \"Games\") \n\n\n\n\nCode\nhead(fantasy22withoutgarbage)\n\n\n# A tibble: 6 × 33\n  Rk    Player      Tm    FantPos   Age     G    GS   Cmp PassAtt PassYds PassTD\n  <chr> <chr>       <chr> <chr>   <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>  <dbl>\n1 1     Patrick Ma… KAN   QB         27    17    17   435     648    5250     41\n2 2     Josh Jacob… LVR   RB         24    17    17     0       0       0      0\n3 3     Christian … 2TM   RB         26    17    16     1       1      34      1\n4 4     Derrick He… TEN   RB         28    16    16     2       2       4      1\n5 5     Justin Jef… MIN   WR         23    17    17     2       2      34      0\n6 6     Austin Eke… LAC   RB         27    17    17     0       0       0      0\n# ℹ 22 more variables: Int <dbl>, RushAtt <dbl>, RushYds <dbl>, RushYPA <dbl>,\n#   RushTD <dbl>, RecTgt <dbl>, Rec <dbl>, RecYds <dbl>, RecYPR <dbl>,\n#   RecTD <dbl>, Fmb <dbl>, FmbL <dbl>, RecRushTD <dbl>, TwoPCMade <dbl>,\n#   TwoPCPass <dbl>, FantPt <dbl>, PPR <dbl>, DKPt <dbl>, FDPt <dbl>,\n#   VBD <dbl>, PosRank <dbl>, OvRank <dbl>\n\n\n\n\nCode\nfantasydata22 <- fantasy22withoutgarbage %>% \n  mutate(Player=gsub(\"\\\\*+\",\"\",Player),\n         Player=gsub(\"\\\\+\",\"\",Player))\n\n\n\n\nCode\nhead(fantasydata22)\n\n\n# A tibble: 6 × 33\n  Rk    Player      Tm    FantPos   Age     G    GS   Cmp PassAtt PassYds PassTD\n  <chr> <chr>       <chr> <chr>   <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>  <dbl>\n1 1     Patrick Ma… KAN   QB         27    17    17   435     648    5250     41\n2 2     Josh Jacobs LVR   RB         24    17    17     0       0       0      0\n3 3     Christian … 2TM   RB         26    17    16     1       1      34      1\n4 4     Derrick He… TEN   RB         28    16    16     2       2       4      1\n5 5     Justin Jef… MIN   WR         23    17    17     2       2      34      0\n6 6     Austin Eke… LAC   RB         27    17    17     0       0       0      0\n# ℹ 22 more variables: Int <dbl>, RushAtt <dbl>, RushYds <dbl>, RushYPA <dbl>,\n#   RushTD <dbl>, RecTgt <dbl>, Rec <dbl>, RecYds <dbl>, RecYPR <dbl>,\n#   RecTD <dbl>, Fmb <dbl>, FmbL <dbl>, RecRushTD <dbl>, TwoPCMade <dbl>,\n#   TwoPCPass <dbl>, FantPt <dbl>, PPR <dbl>, DKPt <dbl>, FDPt <dbl>,\n#   VBD <dbl>, PosRank <dbl>, OvRank <dbl>\n\n\nExample Text\n\n\nCode\nfantasystats22 <- fantasydata22 %>%\n  filter(PPR>0)\n\n\n\n\nCode\nfantasystats22 %>%\n  arrange(PPR)\n\n\n# A tibble: 572 × 33\n   Rk    Player     Tm    FantPos   Age     G    GS   Cmp PassAtt PassYds PassTD\n   <chr> <chr>      <chr> <chr>   <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>  <dbl>\n 1 594   Jordan Ho… NOR   RB         28     2     0     0       0       0      0\n 2 637   Damien Wi… ATL   RB         30     1     1     0       0       0      0\n 3 561   Nick Bell… SEA   RB         33    16     0     0       0       0      0\n 4 601   Case Keen… BUF   QB         34     2     0     2       7       8      0\n 5 577   Jacob Eas… CAR   QB         25     1     0     3       5      59      0\n 6 597   Duke John… BUF   RB         29     1     0     0       0       0      0\n 7 646   Ihmir Smi… 2TM   WR         23     8     0     0       0       0      0\n 8 540   Kylin Hill GNB   RB         24     2     0     0       0       0      0\n 9 544   Josh John… SFO   QB         36     2     0     1       2      10      0\n10 530   Brandon A… CIN   QB         30     1     0     3       3      22      0\n# ℹ 562 more rows\n# ℹ 22 more variables: Int <dbl>, RushAtt <dbl>, RushYds <dbl>, RushYPA <dbl>,\n#   RushTD <dbl>, RecTgt <dbl>, Rec <dbl>, RecYds <dbl>, RecYPR <dbl>,\n#   RecTD <dbl>, Fmb <dbl>, FmbL <dbl>, RecRushTD <dbl>, TwoPCMade <dbl>,\n#   TwoPCPass <dbl>, FantPt <dbl>, PPR <dbl>, DKPt <dbl>, FDPt <dbl>,\n#   VBD <dbl>, PosRank <dbl>, OvRank <dbl>\n\n\n\n\nCode\nggplot() +\n  geom_point(data=fantasystats22, aes(x=Age, y=PPR), size=1.75, color=\"#0088ce\") \n\n\n\n\n\n\n\nCode\ntopplayers <- fantasystats22 %>%\n  filter(G>8)\n\n\n\n\nCode\nqbs <- fantasystats22 %>%\n  filter(FantPos==\"QB\", G>8)%>%\n  top_n(20, wt=PPR/G)\n\n\n\n\nCode\nggplot() +\n  geom_point(data=qbs, aes(x=Age, y=PPR/G), size=1.75, color=\"black\") \n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_beeswarm(data=topplayers, aes(x=FantPos, y=PPR/G), color=\"grey\")\n\n\n\n\n\n\n\nCode\nggplot() +\n  geom_point(data=topplayers, aes(x=Age, y=PPR/G), size=1.75, color=\"black\")\n\n\n\n\n\n\n\nCode\nrbs <- fantasystats22 %>%\n  filter(FantPos==\"RB\", G>8)%>%\n  top_n(20, wt=PPR/G)\n\n\n\n\nCode\nggplot() +\n  geom_point(data=rbs, aes(x=Age, y=PPR/G), size=1.75, color=\"black\")\n\n\n\n\n\n\n\nCode\nwrs <- fantasystats22 %>%\n  filter(FantPos==\"WR\", G>8)%>%\n  top_n(20, wt=PPR/G)\n\n\n\n\nCode\nggplot() +\n  geom_point(data=wrs, aes(x=Age, y=PPR/G), size=1.75, color=\"black\")\n\n\n\n\n\n\n\nCode\ntes <- fantasystats22 %>%\n  filter(FantPos==\"TE\", G>8)%>%\n  top_n(20, wt=PPR/G)\n\n\n\n\nCode\nggplot() +\n  geom_point(data=tes, aes(x=Age, y=PPR/G), size=1.75, color=\"black\")\n\n\n\n\n\n\n\nCode\nrbs %>%\n  arrange((G))\n\n\n# A tibble: 20 × 33\n   Rk    Player     Tm    FantPos   Age     G    GS   Cmp PassAtt PassYds PassTD\n   <chr> <chr>      <chr> <chr>   <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl>  <dbl>\n 1 108   Jonathan … IND   RB         23    11    11     0       0       0      0\n 2 55    James Con… ARI   RB         27    13    13     0       0       0      0\n 3 100   Dameon Pi… HOU   RB         22    13    13     0       0       0      0\n 4 34    Joe Mixon  CIN   RB         26    14    14     0       0       0      0\n 5 69    D'Andre S… DET   RB         23    14     8     0       0       0      0\n 6 38    Kenneth W… SEA   RB         22    15    11     0       0       0      0\n 7 54    Alvin Kam… NOR   RB         27    15    13     0       0       0      0\n 8 4     Derrick H… TEN   RB         28    16    16     2       2       4      1\n 9 15    Saquon Ba… NYG   RB         25    16    16     0       0       0      0\n10 20    Tony Poll… DAL   RB         25    16     4     0       0       0      0\n11 56    Leonard F… TAM   RB         27    16     9     0       1       0      0\n12 2     Josh Jaco… LVR   RB         24    17    17     0       0       0      0\n13 3     Christian… 2TM   RB         26    17    16     1       1      34      1\n14 6     Austin Ek… LAC   RB         27    17    17     0       0       0      0\n15 10    Nick Chubb CLE   RB         27    17    17     0       0       0      0\n16 18    Jamaal Wi… DET   RB         27    17     9     0       0       0      0\n17 21    Dalvin Co… MIN   RB         27    17    17     0       0       0      0\n18 26    Aaron Jon… GNB   RB         28    17    17     0       0       0      0\n19 31    Najee Har… PIT   RB         24    17    17     1       1       4      0\n20 33    Rhamondre… NWE   RB         24    17     7     0       0       0      0\n# ℹ 22 more variables: Int <dbl>, RushAtt <dbl>, RushYds <dbl>, RushYPA <dbl>,\n#   RushTD <dbl>, RecTgt <dbl>, Rec <dbl>, RecYds <dbl>, RecYPR <dbl>,\n#   RecTD <dbl>, Fmb <dbl>, FmbL <dbl>, RecRushTD <dbl>, TwoPCMade <dbl>,\n#   TwoPCPass <dbl>, FantPt <dbl>, PPR <dbl>, DKPt <dbl>, FDPt <dbl>,\n#   VBD <dbl>, PosRank <dbl>, OvRank <dbl>\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data=qbs, \n    aes(\n      x=reorder(Player, PPR/G), \n      weight=PPR/G), \n      fill=\"grey\"\n    ) +\n  coord_flip()\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data=wrs, \n    aes(\n      x=reorder(Player, PPR/G), \n      weight=PPR/G), \n      fill=\"grey\"\n    ) +\n  coord_flip()\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data=rbs, \n    aes(\n      x=reorder(Player, PPR/G), \n      weight=PPR/G), \n      fill=\"grey\"\n    ) +\n  coord_flip()\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data=tes, \n    aes(\n      x=reorder(Player, PPR/G), \n      weight=PPR/G), \n      fill=\"grey\"\n    ) +\n  coord_flip()\n\n\n\n\n\nText"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/the-big-ten-sucks-at-march-madness/index.html",
    "href": "posts/the-big-ten-sucks-at-march-madness/index.html",
    "title": "The Big Ten’s Short Lived 2023 March Madness",
    "section": "",
    "text": "The Big Ten Conference sent eight teams to the NCAA Men’s Basketball Tournament this past March. Only one made it past the first weekend. Let’s find out why.\nScoring a lot of points and not allowing your opponent to score a lot are two great and simple ways to win a basketball game, so let’s take a look at average points and points allowed per game for each NCAA Division 1 team in the 2022-23 season.\nThe Big Ten is known to be a tough, defensive heavy conference, and the numbers prove it. Only two teams allow more points per game than the average D1 team does (Iowa and Minnesota). All 12 other teams have an above average defense when it comes to points allowed.\nWhen it comes to offense, that’s a different story. Iowa ranks 17th nationally in points per game with 80.6 ppg, but it takes all the way to 100th place for another Big Ten team to get up on the board (Indiana with 75.3 ppg). Overall, half of the Big Ten ranks above the average and half ranks below the average D1 team in points per game.\nBig Ten teams struggled to win two games to get to the Sweet 16 this year. Let’s take a look at how Sweet 16 qualifiers fared in points scored and allowed per game this past year.\nEleven Sweet 16 teams have scored more points per game than our second place Big Ten team Indiana. Eleven. Also, every single Sweet 16 team scored above the average in points per game and therefore they all fall into our “Good Offense” category. That is, all but one: Michigan State, who, you guessed it, plays in the Big Ten.\nIt appears that if you want to make a run in March, you better be able to score the ball or someone who can put up more points will end your season.\n\n\nCode\nlibrary(tidyverse)\n\nstats <- read_csv(\"http://mattwaite.github.io/sportsdatafiles/stats23.csv\")\n\nteams <- c(\"Nebraska\", \"Iowa\", \"Northwestern\", \"Minnesota\", \"Wisconsin\", \"Illinois\", \"Indiana\", \"Purdue\", \"Michigan\", \"Michigan State\", \"Ohio State\", \"Penn State\", \"Rutgers\", \"Maryland\")\n\nbigtournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\")\n\nbig <- stats %>% filter(School %in% teams)\n\nbigdance <- stats %>% filter(School %in% bigtournament)\n\nmi <- stats %>% filter(School == \"Michigan State\")\n\ntournament <- c(\"Iowa\", \"Northwestern\", \"Maryland\", \"Indiana\", \"Penn State\", \"Illinois\", \"Michigan State\", \"Purdue\", \"Fairleigh Dickinson\", \"Memphis\", \"Florida Atlantic\", \"Duke\", \"Oral Roberts\", \"Tennessee\", \"Louisiana\", \"Kentucky\", \"Providence\", \"Kansas State\", \"Montana State\", \"Southern California\", \"Marquette\", \"Vermont\", \"Houston\", \"Northern Kentucky\", \"Auburn\", \"Miami (FL)\", \"Drake\", \"Kent State\", \"Iowa State\", \"Pittsburgh\", \"Xavier\", \"Kennesaw State\", \"Texas A&M\", \"Texas\", \"Colgate\", \"Alabama\", \"Texas A&M-Corpus Christi\", \"West Virginia\", \"San Diego State\", \"College of Charleston\", \"Virginia\", \"Furman\", \"Creighton\", \"NC State\", \"Baylor\", \"UC Santa Barbara\", \"Missouri\", \"Utah State\", \"Arizona\", \"Princeton\", \"Kansas\", \"Howard\", \"Arkansas\", \"Saint Mary's (CA)\", \"Virginia Commonwealth\", \"Connecticut\", \"Iona\", \"TCU\", \"Arizona State\", \"Gonzaga\", \"Grand Canyon\", \"Boise State\", \"UCLA\", \"UNC Asheville\")\n\ndance <- stats %>% filter(School %in% tournament)\n\nsweettournament <- c(\"Michigan State\", \"Kansas State\", \"Arkansas\", \"Connecticut\", \"Florida Atlantic\", \"Tennessee\", \"Gonzaga\", \"UCLA\", \"San Diego State\", \"Alabama\", \"Miami (FL)\", \"Houston\", \"Princeton\", \"Creighton\", \"Xavier\", \"Texas\")\n\nsweetdance <- stats %>% filter(School %in% sweettournament)\n\ntop16 <- dance %>% \n  arrange(desc(OverallSOS)) %>% \n  top_n(16, wt=OverallSOS) %>% \n  select(School, OverallSOS)\n\nboth16 <- c(\"Alabama\", \"Arkansas\", \"Creighton\", \"Kansas State\", \"Michigan State\", \"Texas\", \"UCLA\", \"Xavier\")\n\nboth16dance <- stats %>% filter(School %in% both16)\n\nresidualmodel <- dance %>% mutate(averagedifferential = ForPoints/Games - OppPoints/Games)\n\n\n\nbigdanceresidual <- residualmodel %>% filter(School %in% bigtournament)\n\ndanceresidual <- residualmodel %>% filter(School %in% tournament)\n\nsweetdanceresidual <- residualmodel %>% filter(School %in% sweettournament)\n\nmiresidual <- residualmodel %>% filter(School == \"Michigan State\")\n\nggplot() +\n  geom_hline(yintercept=70.11547, color=\"black\") + \n  geom_vline(xintercept=71.81432, color=\"black\") +   \n  geom_point(data=stats, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"grey\", alpha=.3) +\n  geom_point(data=big, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#0088ce\") +\n  geom_point(data=sweetdance, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"red\") +\n  geom_point(data=mi, aes(x=ForPoints/Games, y=OppPoints/Games), size=1.75, color=\"#18453B\") + \n\n  labs(\n    title=\"Offensive and Defensive Points Per Game\",\n    subtitle=\"The Big Ten likes to play defense, but Sweet 16 teams can score\",\n    x=\"Points Per Game\", \n    y=\"Opponent Points Per Game\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n   geom_text(aes(x=82.5, y=81.5, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=82.5, y=78.5, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=68, y=67, label=\"Michigan State\\n(Big Ten and Sweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=82.5, y=60, label=\"Good Offense,\\nGood Defense\"), color=\"black\") +\n  geom_text(aes(x=62.5, y=80, label=\"Bad Offense,\\nBad Defense\"), color=\"black\") +\n  geom_text(aes(x=69.75, y=82.5, label=\"Average Points\\nPer Game\"), size=3, color=\"black\") +\n  geom_text(aes(x=60, y=72, label=\"Average Opponent\\nPoints Per Game\"), size=3, color=\"black\") +\n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nThe Big Ten is typically seen to have lots of good teams year in a year out, but having a great team is a whole different animal. The last team from the conference to win the March Madness bracket was Michigan State in 2000 in Tom Izzo’s fifth year as head coach. And Izzo has not held up since, leading the Spartans to eight Final Four appearances since 1999, however only the 2000 squad took home a win in the final.\nHow has Sparty stayed competitive today? Coaching is obviously part of it, but what about the opponents Michigan State plays to prepare them for the grind of the conference schedule and the tournament?\nStrength of schedule is a measurement of the difficulty of each team’s opponent. Most college basketball teams do not have the ability to all play their conference opponents the same number of times, and with out of conference play, some teams will have much easier or harder schedules than others.\nIn the Big Ten, Michigan State leads the Big Ten with the hardest schedule significantly. Playing top teams such as Gonzaga, Kentucky and Alabama early in the season contributed to the high strength of schedule, but also gave Sparty experience for quality postseason opponents.\nWhen it comes to the rest of the conference, the other seven teams to make the tournament all fall in the bottom nine in strength of schedule. It appears the “beat a bunch of cupcake teams to look and feel good” method just might not be the way to win a National Title.\n“If you want to be the best, you have to beat the best.”\nMichigan State ended the season with the third hardest strength of schedule of all D1 teams but had no fear to play that tough schedule. It showed that they had experience when they beat 2 seeded Marquette and took 3 seeded Kansas State to Overtime in the NCAA tournament.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=big, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), \n      fill=\"grey\"\n    ) + \n  geom_bar(\n    data=bigdance, \n    aes(\n      x=reorder(School, OverallSOS), \n      weight=OverallSOS), fill=\"#0088ce\"\n      \n    ) +\n  coord_flip() +\n labs(\n    title=\"Big Ten Strength of Schedule\",\n    subtitle=\"Sparty is not afraid of a fight\",\n    x=\"\", \n    y=\"Strength of Schedule\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\")+\n  geom_text(aes(x=\"Purdue\", y=9.75, label=\"Tournament\\nTeams\"), size=3.6, color=\"#0088ce\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nWith the Big Ten being a defensive, survival and advance conference, many close games are bound to occur, right? What percent of games are tournament teams expected to have won based on their point differential?\nThe Big Ten has generally been underperforming or average in the realm of point differential. With only one team, Purdue, significantly above the line, it can be seen that it is very easy for Big Ten teams to rely on beating each other up in the middle of the pack to move up in the conference.\nRemember the log jam in the conference standings and the battle for Big Ten Tournament seeds? Most tournament Big Ten teams are log jammed in the 0.6-0.7 range for win percentage and no one in that group can seem to put together many dominant performances, but rather they just squeak by with single digit point differentials.\nWhen it comes to Sweet 16 teams, they are all over the place as they come from many different conferences with different opponents. Many Sweet 16 teams are Cinderella teams who just happen to be getting hot at the right time.\nThe biggest cluster of Sweet 16 teams comes at the top of the point differential rankings. Seven of the top nine average point differential leaders qualified for the Sweet 16 (The College of Charleston and Oral Roberts were the two to not survive the first weekend). I may have just found my new strategy to fill out my bracket next March. Why would a team that consistently beats down on its opponents let off the gas in the tournament? Of course, they wouldn’t.\nTake National Champion Connecticut. The Huskies averaged a point differential of 14.2. In their six NCAA Tournament games, they won each by an average of 21.7 points. The closest tournament game they played was a 13-point win against Miami (FL) in the Final Four. Florida Atlantic, which made a run to the Final Four as a nine seed, was also used to winning by large margins, averaging a point differential of 13.6 all season.\nComing in dead last of the Sweet 16 teams in point differential, and nearly win percentage as well, is, to no one’s surprise, the Big Ten’s own: Sparty.\n\n\nCode\nggplot() + \n  geom_point(data=residualmodel, aes(x=averagedifferential, y=WinPct)) +\n  geom_smooth(data=residualmodel, aes(x=averagedifferential, y=WinPct), method=\"lm\", color=\"black\") +\n  geom_point(data=danceresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"grey\") +\n  geom_point(data=bigdanceresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"#0088ce\") +\n  geom_point(data=sweetdanceresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"red\") +\n  geom_point(data=miresidual, aes(x=averagedifferential, y=WinPct), size=1.75, color=\"#18453B\") +\n  \n  labs(\n    title=\"Point Differential and Win Percentage of Tournament Teams\",\n    subtitle=\"Big Ten teams like to keep it close, but Sweet 16 teams can run away with the game\",\n    x=\"Average Point Differential\", \n    y=\"Win Percentage\",\n    caption=\"Source: College Basketball Reference | By Greg Johnson\") +\n  geom_text(aes(x=5, y=.925, label=\"Sweet 16 Teams\"), color=\"red\") +\n  geom_text(aes(x=5, y=.875, label=\"Big Ten Teams\"), color=\"#0088ce\") +\n  geom_text(aes(x=2.5, y=.675, label=\"Michigan State\\n(Big Ten and\\nSweet 16 Team)\"), size=3, color=\"#18453B\") +\n  geom_text(aes(x=15.25, y=.775, label=\"National Champion\\nConnecticut\"), size=3, color=\"red\") +\n  geom_text(aes(x=12.3, y=.91, label=\"Nation Semifinalist\\nFlorida Atlantic\"), size=3, color=\"red\") +\n  geom_text(aes(x=15, y=.65, label=\"Teams that underperformed based on\\ntheir point differential fall below the line,\\nwhile teams that overperformed lie above the line\"), size=3, color=\"black\") +\n   geom_text(aes(x=16.25, y=.96, label=\"Expected win percentage based\\non average point differential\"), size=3, color=\"black\") +\n  \n  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    plot.title.position=\"plot\"\n    )\n\n\n\n\n\nThe Big Ten has some consistently good, but not great, basketball teams. They have cooked up a recipe to stay relevant in the college basketball realm, but from a statistical side, that recipe is nothing near winning a championship. Maybe that’s why Kevin Warren wanted to leave."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]